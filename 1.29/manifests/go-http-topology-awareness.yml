apiVersion: v1
kind: Namespace
metadata:
  name: "demo"
  labels:
    pod-security.kubernetes.io/audit: restricted
    pod-security.kubernetes.io/enforce: restricted 
    pod-security.kubernetes.io/warn: restricted    
---  
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "go-http-deployment"
  namespace: "demo"
spec:
  selector:
    matchLabels:
      app: "go-http"
  replicas: 3
  template:
    metadata:
      labels:
        app: "go-http"
        role: "backend"
    spec:
      dnsPolicy: Default # "Default" is not the true default value
      enableServiceLinks: false    # Disable service discovery
      automountServiceAccountToken: false
      securityContext:
        seccompProfile:
          type: RuntimeDefault
        runAsNonRoot: true 
        runAsUser: 1000   
      containers:
      - image: public.ecr.aws/r2l1x4g2/go-http-server:v0.1.0-23ffe0a715
        imagePullPolicy: Always
        name: "go-http"
        resources:
          requests:
           memory: "64Mi"
           cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
              - ALL      
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: tmp
          mountPath: /tmp   
      volumes:
        - name: tmp
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: "go-http-svc"
  namespace: "demo"
  annotations:
   service.kubernetes.io/topology-mode: auto
   service.beta.kubernetes.io/aws-load-balancer-type: external
   service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip
   service.beta.kubernetes.io/aws-load-balancer-attributes: load_balancing.cross_zone.enabled=true
   service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing   
spec:
  # type:
  ports:
    - port: 80
      targetPort: 8080
  selector:
    app: "go-http"   
  type: LoadBalancer